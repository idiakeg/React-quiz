{"version":3,"sources":["data.js","App.js","index.js"],"names":["questions","questionText","answerOption","answerText","isCorrect","App","useState","currentQuestion","setCurrentQuestion","done","setDone","score","setScore","className","length","onClick","map","answer","index","newQuestion","handleBtnClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAwCeA,G,MAxCG,CACd,CACIC,aAAc,iCACdC,aAAc,CACV,CAACC,WAAY,WAAYC,WAAW,GACpC,CAACD,WAAY,SAAUC,WAAW,GAClC,CAACD,WAAY,QAASC,WAAW,GACjC,CAACD,WAAY,SAAUC,WAAW,KAG1C,CACIH,aAAc,2BACdC,aAAc,CACV,CAACC,WAAY,aAAcC,WAAW,GACtC,CAACD,WAAY,YAAaC,WAAW,GACrC,CAACD,WAAY,aAAcC,WAAW,GACtC,CAACD,WAAY,aAAcC,WAAW,KAI9C,CACIH,aAAc,2CACdC,aAAc,CACV,CAACC,WAAY,QAASC,WAAW,GACjC,CAACD,WAAY,QAASC,WAAW,GACjC,CAACD,WAAY,SAAUC,WAAW,GAClC,CAACD,WAAY,YAAaC,WAAW,KAG7C,CACIH,aAAc,yCACdC,aAAc,CACV,CAACC,WAAY,IAAKC,WAAW,GAC7B,CAACD,WAAY,IAAKC,WAAW,GAC7B,CAACD,WAAY,IAAKC,WAAW,GAC7B,CAACD,WAAY,IAAKC,WAAW,OC4B1BC,EA3DH,WAAO,IAAD,EAC8BC,mBAAS,GADvC,mBACTC,EADS,KACQC,EADR,OAEQF,oBAAS,GAFjB,mBAETG,EAFS,KAEHC,EAFG,OAGUJ,mBAAS,GAHnB,mBAGTK,EAHS,KAGFC,EAHE,KA0BhB,OACE,qBAAKC,UAAU,eAAf,SAEIJ,EACA,sBAAKI,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,wBAAsC,iCAASF,IAA/C,WAAsE,iCAASX,EAAUc,YAEzF,wBAAQD,UAAU,aAAaE,QAZjB,WACpBL,GAAQ,GACRF,EAAmB,GACnBI,EAAS,IASH,2BAKA,qCACA,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6CAAgBN,EAAkB,KADpC,IAC+CP,EAAUc,UAEzD,qBAAKD,UAAU,eAAf,SAA+Bb,EAAUO,GAAiBN,kBAE5D,qBAAKY,UAAU,gBAAf,SACGb,EAAUO,GAAiBL,aAAac,KAAI,SAACC,EAAQC,GACpD,OACE,wBAAQH,QAAS,kBA1CR,SAACX,GAElBA,GACFQ,EAFaD,EAAQ,GAKvB,IAAIQ,EAAcZ,EAAkB,EACjCY,EAAcnB,EAAUc,OACzBN,EAAmBW,GAEnBT,GAAQ,GAgCyBU,CAAeH,EAAOb,YAAwBS,UAAU,MAA/E,SAAsFI,EAAOd,YAA/Be,cChD9EG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16990469.chunk.js","sourcesContent":["const questions = [\r\n    {\r\n        questionText: \"What is the capital of france?\",\r\n        answerOption: [\r\n            {answerText: \"New york\", isCorrect: false},\r\n            {answerText: \"London\", isCorrect: false},\r\n            {answerText: \"Paris\", isCorrect: true},\r\n            {answerText: \"Dublin\", isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        questionText: \"Who is the CEO of Tesla?\",\r\n        answerOption: [\r\n            {answerText: \"Jeff Bezos\", isCorrect: false},\r\n            {answerText: \"Elon Musk\", isCorrect: true},\r\n            {answerText: \"Bill Gates\", isCorrect: false},\r\n            {answerText: \"Tony Stark\", isCorrect: false}\r\n        ]\r\n    },\r\n   \r\n    {\r\n        questionText: \"The iphone was created by which company?\",\r\n        answerOption: [\r\n            {answerText: \"Apple\", isCorrect: true},\r\n            {answerText: \"Intel\", isCorrect: false},\r\n            {answerText: \"Amazon\", isCorrect: false},\r\n            {answerText: \"Microsoft\", isCorrect: false}\r\n        ]\r\n    },\r\n    {\r\n        questionText: \"How many Harry Potter books are there?\",\r\n        answerOption: [\r\n            {answerText: \"1\", isCorrect: false},\r\n            {answerText: \"4\", isCorrect: false},\r\n            {answerText: \"6\", isCorrect: false},\r\n            {answerText: \"7\", isCorrect: true}\r\n        ]\r\n    }\r\n]\r\n\r\nexport default questions","import React, {useState} from 'react'\r\nimport \"./App.css\"\r\nimport questions from  \"./data\"\r\n\r\nconst App = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [done, setDone] = useState(false)\r\n  const [score, setScore] = useState(0)\r\n  // const [prevScore, setPrevScore] = useState(0)\r\n\r\n  const handleBtnClick = (isCorrect) => {\r\n    let newScore = score + 1\r\n     if(isCorrect){\r\n      setScore(newScore)\r\n    }\r\n    // console.log(newScore, score);\r\n    let newQuestion = currentQuestion + 1\r\n    if(newQuestion < questions.length){\r\n      setCurrentQuestion(newQuestion)\r\n    }else{\r\n      setDone(true)\r\n    }\r\n\r\n  }\r\n\r\n  const handleRestart = () => {\r\n    setDone(false)\r\n    setCurrentQuestion(0)\r\n    setScore(0)\r\n  }\r\n  return (\r\n    <div className='appContainer'>\r\n      {\r\n        done ?\r\n        <div className='finished'>\r\n          <div className=\"userScore\">You scored <strong>{score}</strong> out of <strong>{questions.length}</strong>\r\n          </div> \r\n          <button className='btnRestart' onClick={handleRestart}>Reset Quiz</button>\r\n        </div> \r\n        \r\n        :\r\n        (\r\n          <>\r\n          <div className=\"questionSection\">\r\n            <div className=\"questionCount\">\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className=\"questionText\">{questions[currentQuestion].questionText}</div>\r\n          </div>\r\n          <div className=\"answerSection\">\r\n            {questions[currentQuestion].answerOption.map((answer, index) => {\r\n              return (\r\n                <button onClick={() => handleBtnClick(answer.isCorrect)} key={index} className='btn'>{answer.answerText}</button>\r\n              )\r\n            }) }\r\n          </div>\r\n          </>\r\n        ) \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}